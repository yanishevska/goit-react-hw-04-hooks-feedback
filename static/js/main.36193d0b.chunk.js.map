{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","FeedbackOptions","options","onLeaveFeedback","btnBox","map","option","btnFeedback","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","countText","Notification","message","notificationContainer","text","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","prev","console","log","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,UAAY,gC,mBCA9FD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,gBCAjED,EAAOC,QAAU,CAAC,YAAc,uC,gBCAhCD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,sBAAwB,8C,gKCe7DC,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCgBQI,MApBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,qBAAKL,UAAWC,IAAEK,OAAlB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBACER,UAAWC,IAAEQ,YAEbC,KAAK,SACLC,QAAS,kBAAKN,EAAgBG,IAJhC,SAMGA,GAJIA,S,gBCkCAI,MAxCf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAKjB,UAAWC,IAAEC,UAAlB,SACE,qBAAIF,UAAWC,IAAEiB,KAAjB,UACE,qBAAIlB,UAAWC,IAAEkB,KAAjB,UACE,mBAAGnB,UAAWC,IAAEmB,UAAhB,mBACCP,KAGH,qBAAIb,UAAWC,IAAEkB,KAAjB,UACE,mBAAGnB,UAAWC,IAAEmB,UAAhB,uBACCN,KAGH,qBAAId,UAAWC,IAAEkB,KAAjB,UACE,mBAAGnB,UAAWC,IAAEmB,UAAhB,kBACCL,KAGH,qBAAIf,UAAWC,IAAEkB,KAAjB,UACE,mBAAGnB,UAAWC,IAAEmB,UAAhB,oBACCJ,KAGH,qBAAIhB,UAAWC,IAAEkB,KAAjB,UACE,mBAAGnB,UAAWC,IAAEmB,UAAhB,gCACCH,EAFH,a,gBCZOI,MAZf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,qBAAKtB,UAAWC,IAAEsB,sBAAlB,SACE,mBAAGvB,UAAWC,IAAEuB,KAAhB,SAAuBF,OC+DdG,MA9Df,WACE,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA+BD,mBAAS,GAAxC,mBAAQZ,EAAR,KAAiBc,EAAjB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KAsBMC,EAAqB,WAEzB,OAAQjB,EAAOC,EAAUC,GASzB,OACE,qCACE,cAAC,EAAD,CAASjB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEM,QAAS2B,OAAOC,KAAK,CAACnB,OAAKC,UAAQC,QACnCV,gBApCa,SAACG,GACvB,OAAQA,GACN,IAAK,OACHmB,GAAQ,SAACM,GAAD,OAAUA,EAAO,KACzB,MAEH,IAAK,UACFL,GAAW,SAACK,GAAD,OAAUA,EAAO,KAC5B,MAEF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAUA,EAAO,KACxB,MAEF,QACEC,QAAQC,IAAR,sBAA2B3B,EAA3B,kBAyBEsB,IAAuB,EACtB,cAAC,EAAD,CAAShC,MAAO,aAAhB,SACE,cAAC,EAAD,CACEe,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,IACPb,mBArBcmB,KAAKC,MAC1BxB,EAAOiB,IAAwB,SAwB5B,cAAC,EAAD,CAAcR,QAAS,0BC1DjCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.36193d0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3qcUe\",\"item\":\"Statistics_item__16dw7\",\"countText\":\"Statistics_countText__3gV5f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2gdV6\",\"title\":\"Section_title__1EYqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFeedback\":\"FeedbackOptions_btnFeedback__3_D-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3Q1Xn\",\"notificationContainer\":\"Notification_notificationContainer__Xq0aU\"};","import s from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.btnBox}>\n      {options.map((option) => (\n        <button\n          className={s.btnFeedback}\n          key={option}\n          type=\"button\"\n          onClick={()=> onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div className={s.container}>\n      <ul className={s.list}>\n        <li className={s.item}>\n          <p className={s.countText}>Good:</p>\n          {good}\n        </li>\n\n        <li className={s.item}>\n          <p className={s.countText}> Neutral:</p>\n          {neutral}\n        </li>\n\n        <li className={s.item}>\n          <p className={s.countText}>Bad:</p>\n          {bad}\n        </li>\n\n        <li className={s.item}>\n          <p className={s.countText}>Total:</p>\n          {total}\n        </li>\n\n        <li className={s.item}>\n          <p className={s.countText}>Positive feedback:</p>\n          {positivePercentage}%\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import s from \"./Notification.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return (\n    <div className={s.notificationContainer}>\n      <p className={s.text}>{message}</p>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [ neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n const handleIncrement = (option)  => {\n   switch (option) {\n     case \"good\":\n       setGood((prev) => prev + 1);\n       break;\n     \n    case \"neutral\":\n       setNeutral((prev) => prev + 1);\n       break;\n     \n     case \"bad\":\n       setBad((prev) => prev + 1);\n       break;\n     \n     default:\n       console.log(`We have not ${option} button`);\n       break;\n   }\n };\n  \n  const countTotalFeedback = () => {\n   \n    return  good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const totalPercentage = Math.round(\n      (good / countTotalFeedback()) * 100);\n    return totalPercentage;\n  };\n\n    return (\n      <>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={Object.keys({good,neutral,bad})}\n            onLeaveFeedback={handleIncrement}\n          />\n        </Section>\n\n        {countTotalFeedback() > 0 ? (\n          <Section title={\"Statistics\"}>\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message={\"No feedback given\"} />\n        )}\n      </>\n    );\n  }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}